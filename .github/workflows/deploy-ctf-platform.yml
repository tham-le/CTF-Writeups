name: üéØ Deploy Flutter Showcase App

on:
  # SECURITY: Only deploy from main branch with manual confirmation
  push:
    branches: [ main ]
    paths:
      - 'ctf_app/**'
  workflow_dispatch:
    inputs:
      confirm_deploy:
        description: 'Type "DEPLOY_FLUTTER" to confirm Flutter app deployment'
        required: true
        default: ''

permissions:
  contents: read

jobs:
  deploy-flutter-showcase:
    runs-on: ubuntu-latest
    # SECURITY: Require manual confirmation for deployment
    if: github.ref == 'refs/heads/main' && (github.event.inputs.confirm_deploy == 'DEPLOY_FLUTTER' || github.event_name == 'push')
    
    steps:
    - name: Flutter Showcase Notice
      run: |
        echo "üö® NOTICE: This workflow deploys the Flutter CTF app for showcase purposes only."
        echo "üåê The main CTF site at ctf.thamle.live is served by the HTML version."
        echo "üéØ This Flutter app will be deployed to a separate showcase URL."
        
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.3'
        channel: 'stable'
        
    - name: Copy writeups to Flutter assets
      run: |
        mkdir -p ctf_app/assets/writeups
        if [ -d "ctf_app/assets/writeups" ] && [ "$(ls -A ctf_app/assets/writeups)" ]; then
          echo "üìÅ Writeups already present in CTF app assets"
          ls -la ctf_app/assets/writeups/
        else
          echo "‚ö†Ô∏è No writeups found in ctf_app/assets/writeups/"
        fi
        
    - name: Get Flutter dependencies
      working-directory: ./ctf_app
      run: flutter pub get
      
    - name: Build Flutter web app
      working-directory: ./ctf_app
      run: flutter build web --release --base-href /
      
    - name: Deploy to Firebase Hosting
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: ${{ secrets.GITHUB_TOKEN }}
        firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_THAMLE_PORTFOLIO }}
        projectId: thamle-portfolio
        target: ctf-flutter
        channelId: live
